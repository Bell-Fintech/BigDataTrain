<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zd.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="zd.model.Orders" >
    <id column="orders_id" property="ordersId" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="post_id" property="postId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    orders_id, count, status, user_id, post_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zd.model.Orders" >
    insert into orders (orders_id, count, status, 
      user_id, post_id)
    values (#{ordersId,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{postId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="zd.model.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ordersId != null" >
        orders_id,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="postId != null" >
        post_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ordersId != null" >
        #{ordersId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="postId != null" >
        #{postId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zd.model.Orders" >
    update orders
    <set >
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="postId != null" >
        post_id = #{postId,jdbcType=INTEGER},
      </if>
    </set>
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zd.model.Orders" >
    update orders
    set count = #{count,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      post_id = #{postId,jdbcType=INTEGER}
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </update>
  <select id="findOrdersAndItemsAndPost" parameterType="ordersVo" resultMap="ordersMap">
  SELECT orders.*,items.*,posts.* FROM orders,orders_items_relation,items,posts
  WHERE orders.user_id=#{userId} AND  orders.post_id=posts.id 
   AND orders.orders_id=orders_items_relation.orders_id 
   AND orders_items_relation.items_id=items.items_id
   <if test="ordersId!=null and ordersId!=0">
   and orders.orders_id=#{ordersId}
   </if>
   <if test="itemsName!=null and itemsName!=''">
   and items.items_name like '%${itemsName}%'
   </if>
   <if test="price!=null and price!=''">
   and items.price=#{price}
   </if>
  </select>
  <resultMap type="orders" id="ordersMap">
  <id column="orders_id" property="ordersId" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="post_id" property="postId" jdbcType="INTEGER" />
    <association property="posts" javaType="posts">
    </association>
  </resultMap>
</mapper>