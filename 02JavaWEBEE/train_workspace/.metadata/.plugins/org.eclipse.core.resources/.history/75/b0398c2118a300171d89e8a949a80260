package cn.lk.car.controller;

import java.util.Random;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import cn.lk.car.bean.User;
import cn.lk.car.service.UserService;
import cn.lk.car.util.MailEngine;
import cn.lk.car.vo.LoginVo;

@Controller
@RequestMapping("/login")
public class LoginAction {
	@Resource
	private UserService userService;
	
	@Resource
	private MailEngine mailEngine;
	
	@RequestMapping("/getPassword.shtml")
	public void getPassword(HttpServletResponse response,User user) throws Exception{
		User checkUser = userService.findUserByLoginNameAndEmail(user);
		if(checkUser == null){
			response.getWriter().write("1");
		}else{
			Random random = new Random();
			String password = "";
			for(int i=0;i<6;i++){
				password = password + random.nextInt(10);
			}
			checkUser.setPassword(password);
			userService.updateByPrimaryKeySelective(checkUser);
			
			String[] address = {checkUser.getEmail()};
			String sender = "812494649@qq.com";
			String title = "你死定了";
			String text = "新密码："+password;
			mailEngine.sendMessage(address, sender, text, title, null, null);
			response.getWriter().write("2");
		}
	}
	
	@RequestMapping("/toGetPassword.shtml")
	public String toGetPassword(){
		return "commons/getPassword";
	}
	
	@RequestMapping("/tologin.shtml")
	public String toLogin(){
		return "commons/login";
	}
	
	@RequestMapping("/login.shtml")
	public void login(HttpServletResponse response,HttpSession session,LoginVo vo) throws Exception{
		String code = (String) session.getAttribute(com.google.code.kaptcha.Constants.KAPTCHA_SESSION_KEY);
		if(vo.getValidateCode().toUpperCase().equals(code.toUpperCase())){
			//查询数据库，是否有用户
			User user = userService.findUserByLoginNameAndPassword(vo);
			if(user==null){
				response.getWriter().write("2");
			}else{
				session.setAttribute("user", user);
				response.getWriter().write("3");
			}
		}else{
			response.getWriter().write("1");
		}
	}
	
	@RequestMapping("/logout.shtml")
	public String logout(HttpSession session){
		session.invalidate();
		return "redirect:tologin.shtml";
	}
}
