数据库分类
      关系型数据库  mysql(轻量级、免费、oracle旗下的)   oracle(重量级、性能高、收费)  sqlServer                      db2     支持sql的规范
                    通过表来描述一类事物，表当中的每一个字段代表该事物的一个属性，表与表之间通过
                    外键来描述关系
      nosql数据库    not only sql  (由于海量数据，sql系列数据库渐渐性能出现瓶颈，HA（高可靠）)
                     不支持sql规范（通过自带的命令来操作）

                    键值对型(map)   redis
                    文档型     mongodb(类似于json，bson)
                    列簇型     hbase

关系型数据库:
      通过sql操作数据库
         sql-->编译(指令)-->指令操作数据库
     设计数据库的范式要求:
         1:表当中的每一个字段都是不可分割的(原子性)
         2:确保每一张表只能描述一类事物（唯一性）
         3:表当中的所有字段都直接的依赖主键（依赖性）
         但是咱们在设计数据库的时候，要充分考虑查询的性能和业务的需要，有时候必须得违背范式要求
          适当的做一些冗余字段，来提高查询的性能
     主键:pk 主键是每条记录的唯一逻辑标示，对某一列设置主键的时候，会给该列自动创建主键索引、唯一索引
     索引:记录该条记录和该字段相关信息的一个书签，会占用硬盘空间
           id  name(做索引)  age
           1    张      18
           2    李     19
          1：先看看name之列是不是做了索引
          2：如果做索引的话，会去查找索引文件（硬盘当中）,找出'张’对应的数据的存放物理地址，直接
             取出该记录
          3：如果没做索引的话，会一条一条的查，直到满足条件为止(全表扫描)
     索引有精确定位的作用，会大大的提高查询效率，但是会占用一定的硬盘空间（存储索引文件）.
     但是在进行增删改的时候，需要去维护索引，也会一定程度影响性能。
     对于那些经常被当做条件去查询的字段，建议做索引，但是单表尽量不要超过6个字段做索引.
     外键:外键是用来描述表与表之间的依赖关系，被外键指向的表叫父表，建立外键的表叫子表。
          使用外键的时候，数据库会建立索引(使用它查询效率要高) ,描述一对多关系.
     很多情况使用逻辑外键
     存储过程:预编译，一次编译，多次运行（事先组织封装好sql语句）
 
关于sql的高级查询:
    几种连表查询的方式:
        1:子查询   先查询（）里的sql,然后把结果当做条件，再进行外层的查询
        2:内连接(查俩表的交集)    select * from a,b where a.b_id=b.id;
                    select * from a inner join b on a.b_id=b.id;
        3:左外连接(a表完全展示(包含了部分交集,不满足条件的部分字段是null))  select * from a left join b on a.b_id=b.id;
        4:右外连接(b表为基表，完全展示(包含了部分交集,不满足条件的部分字段是null))
           select * from a  right join b on a.b_id=b.id;

关于触发器、存储过程、视图
    触发器:当对某张表进行操作的时候，我希望可以触发一些别的行为(sql)，用到触发器
    create trigger 触发器名称 after insert(uodate、delete) on 某张表表名 for each row
    insert into 第二张表 values (   new(old)用来代表新纪录或者是当前纪录)

    存储过程:事先组织封装好的复杂sql语句
    特点:预编译，一次编译，多次运行
    语法:就是一个函数(输入参数 in id int，输出参数 out)
    delimiter $
    create procedure 过程名(in sid int,out str int)
    begin
         select max(sid) from student into str;

    end $;

    call 过程名(1,@num);
    select @num;

    drop procedure 过程名;


    视图(view)就是一张虚拟的表，里面是封装的真实表的查询结果，视图提供了更安全的机制(防止一些重要表结构的泄露),使用视图给开发者提供了便利.
    1：简化查询操作，封装了复杂的sql操作语句
    2: 安全性(可以自定义展示的字段和数据给开发人员，保证了数据的安全性)
    create view 视图名 (列1，列2) as (select*.....)
    drop view 视图名;
        
     
          
    

