1.方法
	含义：就是完成特点功能的代码块
	
	格式：
		修饰符 返回值类型 方法名(参数列表){
			方法体;
			return 返回值；
		}
	格式解析：
		修饰符：public static
		返回值类型：是有返回值决定的
		方法名：为了调用方法，起的一个名字
		参数列表：方法体在编写的时候需要的数据，可以传递多个数据进来，通过变量的方式进行接收，多个变量参数用","隔开
		方法体：就是我们要做的事情，要封装的代码
		return：结束方法，并将返回值返回
		返回值：就是我们要的结果，就是方法体的产物
	方法的重载：
		在一个类中存在一个以上的同名方法，但是它们的参数个数或者对应的参数类型不同
		方法的重载和返回值类型没有关系
		JVM通过参数列表的不同来区分同名的方法
2.一维数组
	含义：是存储同一种数据类型元素的容器
	特点：即可以存储基本数据类型，还可以存储引用类型；数组的长度一旦定义就无法更改
	
	定义格式：
		数据类型[] 数组名;
	初始化：就是为数组中的每个元素申请内存以及赋初始化值
		
		动态初始化：就是我们指定数组的长度，由系统为每个元素赋值
			格式：
				数据类型[] 数组名 = new 数据类型[数组长度];
				
			如何取值和赋值：
				索引就是从0开始编号，最大索引就是数组的长度-1
				取值：数组名[索引];
				赋值：数组名[索引] = 要被赋的值;
		静态初始化：由我们给数组的元素赋值，系统根据元素的个数决定数组的长度
			数据类型[] 数组名 = {元素值1，元素值2...};
		获取数组的长度：数组名.length
3.二维数组
	含义：就是一个数组元素为一维数组的一个数组
	格式1：
		数据类型[][] 数组名 = new 数类类型[m][n];
		m：表示这个二维数组有m个一维数组
		n：表示每一个一维数组有n个元素
		取值：数组名[m][n]表示获取第m+1个一维数组中的第n+1个元素
	格式2：
		数据类型[][] 数组名 = new 数据类型[m][];
		表示这个二维数组有m个一维数组，但是每一个一维数组的长度没有给出，需要我们手动给出
	格式3：
		数据类型[][] 数组名 = {{元素值1，元素值2，。。},{元素值1，元素值2，。。},{元素值1，元素值2，。。}};