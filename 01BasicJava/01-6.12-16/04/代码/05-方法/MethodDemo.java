/*
方法：其实就是完成特点功能的代码块
方法的格式：
	修饰符 返回值类型 方法名(参数类型 参数名1,参数类型 参数名2...){
		方法体;
		return 返回值;
	}
	方法格式解析：
		修饰符：先阶段使用public static
		返回值类型：你返回的值是什么类型，这个就是类型，为了限定返回值的类型的
		方法名：就是为了调用方便，是一个名字
		参数类型：是由方法体在编写过程中需要的数据类型决定的
		参数名：就是一个个变量名
		方法体：就是完成特点功能的代码块
		return：结束方法，将返回值进行返回给调用者
		返回值：就是方法体的产物，就是最终的结果
	封装一个求两个数之和的功能
	如何定义一个方法？
		返回值类型和参数列表一般无法直接确定的
		参数列表可以在编写方法体的时候发现缺少什么，就通过参数列表声明
		返回值类型，当结果产生了，就可以确定返回值类型了
		
	方法分类：
		有明确返回值的方法
			单独调用，没有任何意义
			输出调用，这个意义不大，因为如果想要输出，可以直接在方法体里面输出
			赋值调用，这个才是最终的意义所在
		没有明确返回值的方法，就是返回值是void类型
	方法的注意事项：
		方法不调用就不执行
		方法和方法是平级关系，不能嵌套定义
		方法如果声明了多个参数，那么多个参数直接用","隔开
		方法如果声明了返回值，那么必须用return返回一个对应的返回值
		调用方法时要么传入常量值要么传入变量，不能直接定义一个变量
*/
class MethodDemo{
	public static void main(String[] args){
		int a = 10,b = 20,c = 30;
		//getSum(a,b);//单独调用，没有任何意义
		//System.out.println(getSum(a,b));//输出调用，这个意义不大，因为如果想要输出，可以直接在方法体里面输出
		
		//int sum = a+b;
		int sum = getSum(a,b);
		sum = getSum(sum,c);
		System.out.println("sum="+sum);
	}
	
	/*public static void main(String[] args){
		//已在类 MethodDemo中定义了方法 main(String[])
	}*/
	
	public static int getSum(int x,int y){
		//发现确实两个数，就问上层调用者要
		int sum = x+y;
		return sum;
	}
}