1.多态
	含义：就是一个事物在不同环境下表现不同状态
	水：
		常温：液态
		零度以下：固态
		100度以上：气态
	多态的前提和体现：
		1.类与类之间存在子父类关系
		2.存在方法的重写
		3.父类引用指向子类对象
	使用父类引用无法访问子类特有的方法，可以通过转型解决
	向上转型：
		从子到父
		父类引用指向子类对象
	向下转型：
		从父到子
		将父类引用转换成子类引用(要转换的类型是和堆内存中的对象类型一致)
2.抽象类
	含义：将在父类中无法给出的具体实现方法只声明方法的功能名字，但是不给出具体的实现。具体的实现由子类自己实现，这样的方法叫做抽象方法
		抽象方法所在的类必须是一个抽象类
	抽象类的格式：
		abstract class 类名
		public abstract 返回值类型 方法名();
	抽象类的成员特点：
		成员变量：变量，常量
		成员方法：
			具体方法：提高代码的复用性
			抽象方法：强制子类必须实现的功能
		构造方法：是有的，用于子类初始化父类的数据
	抽象类如何初始化？
		可以根据多态思想，由子类进行继承然后实现里面的抽象方法，这个也叫作抽象类多态
		子类的特点：要么是抽象类型，要么实现所有的抽象方法
		抽象类中不一定有抽象方法，但是有抽象方法的类一定是一个抽象类
3.接口
	含义：有一部分功能不是某一类事物都具有的，可以将这一部分功能抽取到接口中， 
		有哪些具体的事物想要拥有可以实现这个接口，一般接口是做扩展功能的
	接口的格式：
		interface 接口名
	接口的成员特点：
		成员变量：只能是常量，而且有默认修饰符：public static final
		成员方法：只能是抽象方法，而且有默认修饰符：public abstract
		没有构造方法
	接口的初始化：
		可以根据多态的思想，由子类实现接口，然后初始化子类对象，这个叫做接口多态
		实现的格式：
			class 子类名 implements 接口名
		接口的子类：
			要么实现接口中所有的抽象方法
			要么自身变成抽象类
4.类和接口以及彼此之间的关系
	类与类：
		继承关系，单继承，不能多继承，但是可以多层继承
	类与接口：
		实现关系，单实现，多实现，多层实现，还可以在继承一个类的同时实现多个接口
	接口与接口：
		继承关系，单继承，多继承，多层继承
5.抽象类和接口的区别：
	成员的区别：
		抽象类：变量，常量，具体方法，抽象方法，构造方法
		接口：常量，抽象方法
	关系的区别：
		抽象类和类之间：单继承和多层继承关系
		接口和接口：单继承，多继承，多层继承
	设计理念的区别：
		抽象类：做共性功能的
		接口：做扩展功能的