1.代码块
	静态代码块：是随着类的加载而执行，只会执行一次；可以加载C或C++编写打包好的库
	构造代码块：每次创建对象的时候都会调用，优先于构造方法执行；可以初始化一些所有构造方法都必须初始化数据
	普通代码块：放在普通代码块里面的变量可以不用等到方法结束就会被视为垃圾，等待gc回收
	静态代码块，构造方法，构造代码块的执行顺序：
		静态代码块-构造代码块-构造方法
2.继承
	概述：就是将一些类中的相同属性和方法抽取到一个新类中，然后这些类继承这个新类。然后这些类就具有了新类中的所有非私有属性和方法
	继承格式：
		class 子类名 extends 父类名
	继承的这些类叫做子类，派生类
	被继承的这个类叫做父类，超类，基类
	子类在继承父类的成员基础上，还可以定义自己的成员
	
	继承的好处：
		提高了代码的复用性
		提高了代码的维护性
		让类与类之间产生了关系，是多态的前提
	
	继承的特点：
		java中只支持单继承，不支持多继承，但是支持多层继承
	
	继承的注意事项：
		父类的私有成员，子类不能继承
		父类的构造方法子类不能继承
		不能为了部分的功能去继承
	
	一个类的组成部分：
		子父类成员变量的关系
			通过子类的对象访问子类的方法的查找顺序
				首先在子类的方法局部范围找
				再在子类的成员范围找
				再在父类的成员范围找
				如果没有找到就会报错
		子父类成员方法的关系
			通过子类对象访问方法的查找顺序
				首先再子类范围找
				再在父类范围找
				如果没有找到就会报错
			方法的重写：当不满意父类的方法实现时，可以在子类中声明一个一模一样的方法，但是方法体的内容由子类自己编写
			当存在方法重写时，如果调用这个方法了，那么最终使用的还是子类自己的方法
		子父类构造方法的关系
			在子类对象创建成功之前，父类对象肯定已经创建成功了。
			在子类的构造函数中会默认访问父类的无参构造方法：super();
			访问父类的无参构造方法的代码一定是放在子类构造方法的可执行代码第一行
			
			如果父类中没有无参构造方法怎么办？
				可以在子类中通过手动的方式去调用有参的构造方法：super(...);
			在本类中通过this调用本类的构造方法，this(...);
			调用本类构造方法的代码也必须放在可执行代码的第一行
	super：父类的引用			this：本类的引用
		调用成员变量
			super.成员变量名;		this.成员变量名;
		调用构造方法
			super(参数);			this(参数);
		调用成员方法
			super.成员方法名(参数);	this.成员方法名(参数);
3.final关键字
	含义：是最终的意思，是一个修饰符
	修饰类：被修饰的类不能被继承
	修饰方法：被修饰的方法不能被重写
	修饰变量：被修饰的变量就成了常量，常量只能被赋值一次
		成员常量：在对象创建成功之前赋值即可
		局部常量：在使用之前被赋值
	单列设计模式：
		开发中用恶汉式：
			1.私有化构造函数
			2.创建一个私有的静态的最终的本类对象
			3.提供一个公共的静态的返回值类型为本类对象的方法
		
			
		